<?php

namespace AppBundle\Repository;

/**
 * TabletRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TabletRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAllTablets()
    {
        $sql = "SELECT * FROM products
        WHERE type = :type";
        $params = array(
            'type' => 'tablet',
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }

    public function specificationsForOne($id)
    {
        $sql = "SELECT * FROM products
        INNER JOIN tablets on products.id = tablets.product_id
        WHERE tablets.product_id = :id";
        $params = array(
            'id' => $id,
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll()[0];
    }

    public function getAllTabletsNewToOld()
    {
        $sql = "SELECT * FROM products
        WHERE type = :type
        ORDER BY date_added DESC";
        $params = array(
            'type' => 'tablet',
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }

    public function getAllTabletsOldToNew()
    {
        $sql = "SELECT * FROM products
        WHERE type = :type
        ORDER BY date_added ASC";
        $params = array(
            'type' => 'tablet',
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }

    public function getAllTabletsHighToLow()
    {
        $sql = "SELECT * FROM products
        WHERE type = :type
        ORDER BY promotion_price DESC";
        $params = array(
            'type' => 'tablet',
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }

    public function getAllTabletsLowToHigh()
    {
        $sql = "SELECT * FROM products
        WHERE type = :type
        ORDER BY promotion_price ASC";
        $params = array(
            'type' => 'tablet',
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }

    public function getOnlyDiscount()
    {
        $sql = "SELECT * FROM products
        WHERE type = :type AND discount > 0";
        $params = array(
            'type' => 'tablet',
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }
}

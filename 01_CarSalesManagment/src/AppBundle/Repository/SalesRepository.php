<?php

namespace AppBundle\Repository;

/**
 * salesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SalesRepository extends \Doctrine\ORM\EntityRepository
{
    public function getSaleDataAboutClient($id)
    {
        $sql = 'SELECT price_discount, name, model,make
                FROM sales
                INNER JOIN customers ON customers.id = sales.customer_id
                INNER JOIN cars ON cars.id = sales.car_id
                WHERE customers.id = :id ';
        $params = array(
            'id' => $id,
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }

    public function getSummarizedDataAboutClientSales($id)
    {
        $sql = 'SELECT SUM(price_discount) AS total, COUNT(name) AS count
                FROM sales
                INNER JOIN customers ON customers.id = sales.customer_id
                INNER JOIN cars ON cars.id = sales.car_id
                WHERE customers.id = :id ';
        $params = array(
            'id' => $id,
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }

    public function getAllSalesData()
    {
        $sql = 'SELECT  name,sales.id, cars.id AS car_id, model,make, travelled_distance, price_discount, price_no_discount, discount
                FROM sales
                INNER JOIN customers ON customers.id = sales.customer_id
                INNER JOIN cars ON cars.id = sales.car_id       ';

        return $this->getEntityManager()->getConnection()->executeQuery($sql)->fetchAll();
    }

    public function getAllDiscountedSalesData()
    {
        $sql = 'SELECT  name, model,make, travelled_distance, price_discount, price_no_discount, discount
                FROM sales
                INNER JOIN customers ON customers.id = sales.customer_id
                INNER JOIN cars ON cars.id = sales.car_id
                WHERE discount > 0       ';

        return $this->getEntityManager()->getConnection()->executeQuery($sql)->fetchAll();
    }

    public function getDiscountedSalesDataWithPercent($percent)
    {
        $sql = 'SELECT  name, model,make, travelled_distance, price_discount, price_no_discount, discount
                FROM sales
                INNER JOIN customers ON customers.id = sales.customer_id
                INNER JOIN cars ON cars.id = sales.car_id
                WHERE discount = :percent       ';

        $params = array(
            'percent' => $percent,
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }

    public function detailsForSingleSale($id)
    {
        $sql = 'SELECT  name, model,make, travelled_distance, price_discount, price_no_discount, discount
                FROM sales
                INNER JOIN customers ON customers.id = sales.customer_id
                INNER JOIN cars ON cars.id = sales.car_id
                WHERE sales.id = :id       ';

        $params = array(
            'id' => $id,
        );

        return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
    }
}
